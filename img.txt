public static void metodo1(String link, int id, String tipo) throws IOException {// id deve essere o l id del
																						// uttente o id cane /tip serve
																						// per diferenziare cane da
																						// utnte

		if (link.substring(link.length() - 3, link.length()).equals("png")
				|| link.substring(link.length() - 3, link.length()).equals("bmp")
				|| link.substring(link.length() - 3, link.length()).equals("jpg")
				|| link.substring(link.length() - 4, link.length()).equals("jpeg")
				|| link.substring(link.length() - 3, link.length()).equals("tga")
				|| link.substring(link.length() - 3, link.length()).equals("pcx")
				|| link.substring(link.length() - 3, link.length()).equals("psd")
				|| link.substring(link.length() - 3, link.length()).equals("cdp")
				|| link.substring(link.length() - 3, link.length()).equals("djv")
				|| link.substring(link.length() - 3, link.length()).equals("jpd")) {

			FileInputStream fis = new FileInputStream(link);
			byte[] mioFile = new byte[fis.available()]; // numero di byte di
			// cui è composto il file
			for (int i = 0; i < mioFile.length; i++) {
				mioFile[i] = (byte) fis.read();
			}

			BufferedOutputStream out = null;
			try {
				String ids = Integer.toString(id);
				out = new BufferedOutputStream(new FileOutputStream("img\\" + ids + tipo + ".jpg"));
				for (int i1 = 0; i1 < mioFile.length; i1++) {
					out.write(mioFile[i1]);

				}

			} finally {
				if (out != null)
					out.close();
			}
		} else {
			System.out.println("riprova non è un immagine");
		}
	}